import{_}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as r,d as t}from"./app.135ad334.js";const a={},n=t('<h1 id="为什么很多编程语言中数组都从0开始编号" tabindex="-1"><a class="header-anchor" href="#为什么很多编程语言中数组都从0开始编号" aria-hidden="true">#</a> 为什么很多编程语言中数组都从0开始编号？</h1><p>提到数组，我想你肯定不陌生，甚至还会自信地说，它很简单啊。</p><p>是的，在每一种编程语言中，基本都会有数组这种数据类型。不过，它不仅仅是一种编程语言中的数据类型，还是一种最基础的数据结构。尽管数组看起来非常基础、简单，但是我估计很多人都并没有理解这个基础数据结构的精髓。</p><p>在大部分编程语言中，数组都是从 0 开始编号的，但你是否下意识地想过，<strong>为什么数组要从 0 开始编号，而不是从 1 开始呢？</strong> 从 1 开始不是更符合人类的思维习惯吗？</p><h2 id="如何实现随机访问" tabindex="-1"><a class="header-anchor" href="#如何实现随机访问" aria-hidden="true">#</a> 如何实现随机访问？</h2><p>什么是数组？我估计你心中已经有了答案。不过，我还是想用专业的话来给你做下解释。<strong>数组（Array）是一种线性表数据结构。它用一组连续的内存空间，来存储一组具有相同类型的数据。</strong></p><p>这个定义里有几个关键词，理解了这几个关键词，我想你就能彻底掌握数组的概念了。下面就从我的角度分别给你“点拨”一下。</p><p>第一是<strong>线性表</strong>（Linear List）。顾名思义，线性表就是数据排成像一条线一样的结构。每个线性表上的数据最多只有前和后两个方向。其实除了数组，链表、队列、栈等也是线性表结构。</p>',8),o=[n];function s(c,i){return e(),r("div",null,o)}const p=_(a,[["render",s],["__file","为什么很多编程语言中数组都从0开始编号？.html.vue"]]);export{p as default};
