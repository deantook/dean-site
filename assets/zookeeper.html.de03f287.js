const e=JSON.parse('{"key":"v-7d1a044d","path":"/arch/zookeeper.html","title":"ZooKeeper 核心通识","lang":"zh-CN","frontmatter":{"author":"腾讯技术工程","description":"作者：mosun，腾讯 PCG 后台开发工程师 文章分三部分展开陈述：ZooKeeper 核心知识、ZooKeeper 的典型应用实现原理、ZooKeeper 在中间件的落地案例。 为了应对大流量，现代应用/中间件通常采用分布式部署，此时不得不考虑 CAP 问题。ZooKeeper（后文简称 ZK）是面向 CP 设计的一个开源的分布式协调框架，将那些复...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/arch/zookeeper.html"}],["meta",{"property":"og:site_name","content":"文澜阁"}],["meta",{"property":"og:title","content":"ZooKeeper 核心通识"}],["meta",{"property":"og:description","content":"作者：mosun，腾讯 PCG 后台开发工程师 文章分三部分展开陈述：ZooKeeper 核心知识、ZooKeeper 的典型应用实现原理、ZooKeeper 在中间件的落地案例。 为了应对大流量，现代应用/中间件通常采用分布式部署，此时不得不考虑 CAP 问题。ZooKeeper（后文简称 ZK）是面向 CP 设计的一个开源的分布式协调框架，将那些复..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-02T15:58:12.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"腾讯技术工程"}],["meta",{"property":"article:modified_time","content":"2022-12-02T15:58:12.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[{"level":3,"title":"事物 ID：Zxid","slug":"事物-id-zxid","link":"#事物-id-zxid","children":[]}]}],"git":{"createdTime":1669996692000,"updatedTime":1669996692000,"contributors":[{"name":"dean","email":"chenyunlong99@outlook.com","commits":1}]},"readingTime":{"minutes":2.2,"words":659},"autoDesc":true,"filePathRelative":"arch/zookeeper.md","localizedDate":"2022年12月2日"}');export{e as data};
