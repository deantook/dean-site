import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as r,c as a,d as n}from"./app.b0f49908.js";const e={},o=n('<h1 id="http-是什么-http-又不是什么" tabindex="-1"><a class="header-anchor" href="#http-是什么-http-又不是什么" aria-hidden="true">#</a> HTTP 是什么？HTTP 又不是什么？</h1><h2 id="http-是什么" tabindex="-1"><a class="header-anchor" href="#http-是什么" aria-hidden="true">#</a> HTTP 是什么</h2><p>先看一下 HTTP 的名字：<strong>超文本传输协议</strong>，它可以拆成三个部分，分别是：<strong>超文本</strong>、<strong>传输</strong>和<strong>协议</strong>。我们从后往前来逐个解析，理解了这三个词，我们也就明白了什么是 HTTP。</p><img src="http://dean-imgsubmit.oss-cn-beijing.aliyuncs.com/img/d697ba915bcca40a11b8a25571516720.jpg" alt="img" style="zoom:25%;"><h3 id="协议" tabindex="-1"><a class="header-anchor" href="#协议" aria-hidden="true">#</a> 协议</h3><p>第一点，协议必须要有两个或多个参与者，也就是<strong>协</strong>。</p><p>如果只有你一个人，那你自然可以想干什么就干什么，想怎么玩就怎么玩，不会干涉其他人，其他人也不会干涉你，也就不需要所谓的协议。但是，一旦有了两个以上的参与者出现，为了保证最基本的顺畅交流，协议就自然而然地出现了。</p><p>第二点，协议是对参与者的一种行为约定和规范，也就是<strong>议</strong>。</p><p>协议意味着有多个参与者为了达成某个共同的目的而站在了一起，除了要无疑义地沟通交流之外，还必须明确地规定各方的<strong>责</strong>、<strong>权</strong>、<strong>利</strong>，约定该做什么不该做什么，先做什么后做什么，做错了怎么办，有没有补救措施等等。</p><p>HTTP 是一个用在计算机世界里的协议。它使用计算机能够理解的语言确立了一种计算机之间交流通信的规范，以及相关的各种控制和错误处理方式。</p><h3 id="传输" tabindex="-1"><a class="header-anchor" href="#传输" aria-hidden="true">#</a> 传输</h3><p>计算机和网络世界里有数不清的各种角色：CPU、内存、总线、磁盘、操作系统、浏览器、网关、服务器……这些角色之间相互通信也必然会有各式各样、五花八门的协议，用处也各不相同，例如广播协议、寻址协议、路由协议、隧道协议、选举协议等等。</p><p>HTTP 是一个<strong>传输协议</strong>，所谓的<strong>传输</strong>（Transfer）其实很好理解，就是把一堆东西从 A 点搬到 B 点，或者从 B 点搬到 A 点，即「A&lt;===&gt;B」。</p><p>别小看了这个简单的动作，它也至少包含了两项重要的信息。</p><p>第一点，HTTP 协议是一个<strong>双向协议</strong>。</p><p>也就是说，有两个最基本的参与者 A 和 B，从 A 开始到 B 结束，数据在 A 和 B 之间双向而不是单向流动。通常我们把先发起传输动作的 A 叫做请求方，把后接到传输的 B 叫做应答方或者响应方。拿我们最常见的上网冲浪来举例子，浏览器就是请求方 A，网易、新浪这些网站就是应答方 B。双方约定用 HTTP 协议来通信，于是浏览器把一些数据发送给网站，网站再把一些数据发回给浏览器，最后展现在屏幕上，你就可以看到各种有意思的新闻、视频了。</p><p>第二点，数据虽然是在 A 和 B 之间传输，但并没有限制只有 A 和 B 这两个角色，允许中间有<strong>中转</strong>或者<strong>接力</strong>。</p><p>这样，传输方式就从「A&lt;===&gt;B」，变成了「A&lt;=&gt;X&lt;=&gt;Y&lt;=&gt;Z&lt;=&gt;B」，A 到 B 的传输过程中可以存在任意多个「中间人」，而这些中间人也都遵从 HTTP 协议，只要不打扰基本的数据传输，就可以添加任意的额外功能，例如安全认证、数据压缩、编码转换等等，优化整个传输过程。</p><blockquote><p>HTTP 是一个在计算机世界里专门用来在两点之间传输数据的约定和规范。</p></blockquote><h3 id="超文本" tabindex="-1"><a class="header-anchor" href="#超文本" aria-hidden="true">#</a> 超文本</h3><p>既然 HTTP 是一个传输协议，那么它传输的<strong>超文本</strong>到底是什么呢？我还是用两点来进一步解释。</p><p>所谓<strong>文本</strong>（Text），就表示 HTTP 传输的不是 TCP/UDP 这些底层协议里被切分的杂乱无章的二进制包（datagram），而是完整的、有意义的数据，可以被浏览器、服务器这样的上层应用程序处理。</p><p>在互联网早期，文本只是简单的字符文字，但发展到现在，文本的涵义已经被大大地扩展了，图片、音频、视频、甚至是压缩包，在 HTTP 眼里都可以算做是文本。</p><p>所谓超文本，就是「超越了普通文本的文本」，它是文字、图片、音频和视频等的混合体，最关键的是含有<strong>超链接</strong>，能够从一个超文本跳跃到另一个超文本，形成复杂的非线性、网状的结构关系。</p><p>对于超文本，我们最熟悉的就应该是 HTML 了，它本身只是纯文字文件，但内部用很多标签定义了对图片、音频、视频等的链接，再经过浏览器的解释，呈现在我们面前的就是一个含有多种视听信息的页面。</p><p>HTTP 是一个在计算机世界里专门在两点之间传输文字、图片、音频、视频等超文本数据的约定和规范</p><h2 id="http-不是什么" tabindex="-1"><a class="header-anchor" href="#http-不是什么" aria-hidden="true">#</a> HTTP 不是什么</h2><p>因为 HTTP 是一个协议，是一种计算机间通信的规范，所以它不存在<strong>单独的实体</strong>。它不是浏览器、手机 APP 那样的应用程序，也不是 Windows、Linux 那样的操作系统，更不是 Apache、Nginx、Tomcat 那样的 Web 服务器。</p><p>但 HTTP 又与应用程序、操作系统、Web 服务器密切相关，在它们之间的通信过程中存在，而且是一种<strong>动态的存在</strong>，是发生在网络连接、传输超文本数据时的一个<strong>动态过程</strong>。</p><h3 id="不是互联网" tabindex="-1"><a class="header-anchor" href="#不是互联网" aria-hidden="true">#</a> 不是互联网</h3><p>互联网（Internet）是遍布于全球的许多网络互相连接而形成的一个巨大的国际网络，在它上面存放着各式各样的资源，也对应着各式各样的协议，例如超文本资源使用 HTTP，普通文件使用 FTP，电子邮件使用 SMTP 和 POP3 等。</p><p>但毫无疑问，HTTP 是构建互联网的一块重要拼图，而且是占比最大的那一块。</p><h3 id="不是编程语言" tabindex="-1"><a class="header-anchor" href="#不是编程语言" aria-hidden="true">#</a> 不是编程语言</h3><p>编程语言是人与计算机沟通交流所使用的语言，而 HTTP 是计算机与计算机沟通交流的语言，我们无法使用 HTTP 来编程，但可以反过来，用编程语言去实现 HTTP，告诉计算机如何用 HTTP 来与外界通信。</p><p>很多流行的编程语言都支持编写 HTTP 相关的服务或应用，例如使用 Java 在 Tomcat 里编写 Web 服务，使用 PHP 在后端实现页面模板渲染，使用 JavaScript 在前端实现动态页面更新，你是否也会其中的一两种呢？</p><p>HTTP 不是 HTML，这个可能要特别强调一下，千万不要把 HTTP 与 HTML 混为一谈，虽然这两者经常是同时出现。</p><p>HTML 是超文本的载体，是一种标记语言，使用各种标签描述文字、图片、超链接等资源，并且可以嵌入 CSS、JavaScript 等技术实现复杂的动态效果。单论次数，在互联网上 HTTP 传输最多的可能就是 HTML，但要是论数据量，HTML 可能要往后排了，图片、音频、视频这些类型的资源显然更大。</p><h3 id="不是一个孤立的协议" tabindex="-1"><a class="header-anchor" href="#不是一个孤立的协议" aria-hidden="true">#</a> 不是一个孤立的协议</h3><p>在互联网世界里，HTTP 通常跑在 TCP/IP 协议栈之上，依靠 IP 协议实现寻址和路由、TCP 协议实现可靠数据传输、DNS 协议实现域名查找、SSL/TLS 协议实现安全通信。此外，还有一些协议依赖于 HTTP，例如 WebSocket、HTTPDNS 等。这些协议相互交织，构成了一个协议网，而 HTTP 则处于中心地位。</p>',39),s=[o];function T(p,h){return r(),a("div",null,s)}const g=t(e,[["render",T],["__file","02-http-intro.html.vue"]]);export{g as default};
