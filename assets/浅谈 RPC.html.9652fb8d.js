import{_ as r}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c,a as e,b as o,e as a,r as s}from"./app.16c3f437.js";const l={},_=e("h1",{id:"浅谈-rpc",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#浅谈-rpc","aria-hidden":"true"},"#"),o(" 浅谈 RPC")],-1),i=e("p",null,"远程服务调用（Remote Procedure Call，RPC）在计算机科学中已经存在了超过四十年时间，但在今天仍然可以在各种论坛、技术网站上时常遇见“什么是 RPC？”、“如何评价某某 RPC 技术？”、“RPC 更好还是 REST 更好？”之类的问题，仍然“每天”都有新的不同形状的 RPC 轮子被发明制造出来，仍然有层出不穷的文章去比对 Google gRPC、Facebook Thrift 等各家的 RPC 组件库的优劣。",-1),R=e("h2",{id:"到底什么是-rpc",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#到底什么是-rpc","aria-hidden":"true"},"#"),o(" 到底什么是 RPC")],-1),P=e("p",null,"总是有人使用 HTTP 或者 REST 与 RPC 作比较，事实上这三者完全不是一类概念。。。",-1),d=e("p",null,"RPC 指的是调用远程服务方法的一个过程，是一个行为上的概念。任何非本地方法的调用过程都可以被称作 RPC，在微服务架构中主要是指服务之间的调用。",-1),h=e("p",null,"有人会把 RPC 理解为一类协议（Protocol），这样 RPC 就可以和 Http 作比较了，因为 HTTP 恰好就是一种协议（Hyper Text Transfer Protocol）。但是这种比较又不是对立的，因为作为一种通讯协议，HTTP 也是一种 RPC 。",-1),p={href:"https://www.jsonrpc.org/specification",target:"_blank",rel:"noopener noreferrer"},C=e("p",null,"如此比较，RPC 概念就很清晰了，它不是某种具体的协议或风格，而是一种服务间行为。作为一种通信方式，与 RPC 相较的另外一种方式可以是事件驱动的消息队列。",-1);function T(f,u){const t=s("ExternalLinkIcon");return n(),c("div",null,[_,i,R,P,d,h,e("p",null,[o("而说到 REST，REST 并不是一种远程服务调用协议，甚至可以把定语也去掉，它就不是一种协议。协议都带有一定的规范性和强制性，最起码也该有个规约文档，譬如 JSON-RPC，它哪怕再简单，也要有个《"),e("a",p,[o("JSON-RPC Specification"),a(t)]),o("》来规定协议的格式细节、异常、响应码等信息，但是 REST 并没有定义这些内容，尽管有一些指导原则，但实际上并不受任何强制的约束。常有人批评某个系统接口“设计得不够 RESTful”，其实这句话本身就有些争议，REST 只能说是风格而不是规范、协议，并且能完全达到 REST 所有指导原则的系统也是不多见的。")]),C])}const S=r(l,[["render",T],["__file","浅谈 RPC.html.vue"]]);export{S as default};
