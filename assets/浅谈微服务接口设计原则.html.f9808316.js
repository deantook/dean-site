const e=JSON.parse('{"key":"v-43a4ddfc","path":"/notes/%E5%BE%AE%E6%9C%8D%E5%8A%A1/%E6%B5%85%E8%B0%88%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99.html","title":"浅谈微服务接口设计原则","lang":"zh-CN","frontmatter":{"description":"本文结合自身后台开发经验，从高可用、高性能、易维护和低风险（安全）角度出发，尝试总结业界常见微服务接口设计原则，帮助大家设计出优秀的微服务。 前言 微服务是一种系统架构风格，是 SOA（面向服务架构）的一种实践。微服务架构通过业务拆分实现服务组件化，通过组件组合快速开发系统，业务单一的服务组件又可以独立部署，使得整个系统变得清晰灵活： 原子服务; 独立...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/notes/%E5%BE%AE%E6%9C%8D%E5%8A%A1/%E6%B5%85%E8%B0%88%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99.html"}],["meta",{"property":"og:site_name","content":"文澜阁"}],["meta",{"property":"og:title","content":"浅谈微服务接口设计原则"}],["meta",{"property":"og:description","content":"本文结合自身后台开发经验，从高可用、高性能、易维护和低风险（安全）角度出发，尝试总结业界常见微服务接口设计原则，帮助大家设计出优秀的微服务。 前言 微服务是一种系统架构风格，是 SOA（面向服务架构）的一种实践。微服务架构通过业务拆分实现服务组件化，通过组件组合快速开发系统，业务单一的服务组件又可以独立部署，使得整个系统变得清晰灵活： 原子服务; 独立..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-02T15:58:12.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-02T15:58:12.000Z"}]]},"excerpt":"","headers":[{"level":3,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":3,"title":"高可用","slug":"高可用","link":"#高可用","children":[]},{"level":3,"title":"高性能","slug":"高性能","link":"#高性能","children":[]},{"level":3,"title":"4.易维护","slug":"_4-易维护","link":"#_4-易维护","children":[]},{"level":3,"title":"5.低风险","slug":"_5-低风险","link":"#_5-低风险","children":[]},{"level":3,"title":"6.小结","slug":"_6-小结","link":"#_6-小结","children":[]}],"git":{"createdTime":1669996692000,"updatedTime":1669996692000,"contributors":[{"name":"dean","email":"chenyunlong99@outlook.com","commits":1}]},"readingTime":{"minutes":87.99,"words":26397},"autoDesc":true,"filePathRelative":"notes/微服务/浅谈微服务接口设计原则.md","localizedDate":"2022年12月2日"}');export{e as data};
