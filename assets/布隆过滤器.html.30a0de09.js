const e=JSON.parse('{"key":"v-e25c149a","path":"/notes/redis/%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8.html","title":"布隆过滤器","lang":"zh-CN","frontmatter":{"description":"布隆过滤器是一种数据结构，旨在高效地进行元素查找和过滤操作。它使用位向量（bitmap）和一组哈希函数来表示一组元素，可以在不存储元素本身的情况下快速地判断一个元素是否可能存在于这组元素中。 具体来说，布隆过滤器的操作流程如下： 1. 初始化：使用一个大小为 m 的位向量（初始值全为 0）和 k 个不同的哈希函数。 2. 添加元素：将待添加元素进行 k...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/notes/redis/%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"文澜阁"}],["meta",{"property":"og:title","content":"布隆过滤器"}],["meta",{"property":"og:description","content":"布隆过滤器是一种数据结构，旨在高效地进行元素查找和过滤操作。它使用位向量（bitmap）和一组哈希函数来表示一组元素，可以在不存储元素本身的情况下快速地判断一个元素是否可能存在于这组元素中。 具体来说，布隆过滤器的操作流程如下： 1. 初始化：使用一个大小为 m 的位向量（初始值全为 0）和 k 个不同的哈希函数。 2. 添加元素：将待添加元素进行 k..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-14T19:55:43.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-14T19:55:43.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"缓存穿透","slug":"缓存穿透","link":"#缓存穿透","children":[]}],"git":{"createdTime":1678823743000,"updatedTime":1678823743000,"contributors":[{"name":"dean","email":"chenyunlong99@outlook.com","commits":1}]},"readingTime":{"minutes":2.92,"words":876},"autoDesc":true,"filePathRelative":"notes/redis/布隆过滤器.md","localizedDate":"2023年3月14日"}');export{e as data};
